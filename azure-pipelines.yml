trigger:
- master

jobs:
- job: Linux
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    EPICS_HOST_ARCH: 'linux-x86_64'
  
  steps:
  - script: |
      sudo apt-get -y install \
        libreadline-dev libraw1394-11 \
        perl re2c libboost-all-dev \
        build-essential devscripts debhelper \
    displayName: 'Install Packages'
  
  - script: |
      make update
    displayName: 'Update git repos'
  
  - script: |
      make release
    displayName: 'Make Release Files'
  
  - script: |
      configure/modify_release.py ADSIMDETECTOR SET areaDetector/configure/RELEASE.local
      configure/modify_release.py ADFASTCCD     SET areaDetector/configure/RELEASE.local
      configure/modify_release.py ADPROSILICA   SET areaDetector/configure/RELEASE.local
      configure/modify_release.py WITH_BOOST    YES areaDetector/configure/CONFIG_SITE.local
    displayName: 'Modify AD Release File'
    
  - script: |
      make 
    displayName: 'Build epics-modules'
   
  - script: asyn/asyn/asynPortDriver/unittest/O.$EPICS_HOST_ARCH/asynPortDriverTest
    displayName: 'Run asyn tests'
  
  - script: areaDetector/ADCore/bin/$EPICS_HOST_ARCH/plugin-test --log_level=test_suite
    displayName: 'Run areaDetector tests'

  - script: |
      make versions > release.txt
      cat release.txt
      make install DESTDIR=build
      make release SUPPORT=/opt/epics RELEASE_PREFIX=build/opt/epics/
      make archive DESTDIR=build
      make debian DESTDIR=build
    displayName: Make tarball, debian package and release file
    
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: NSLS-II
      repositoryName: NSLS-II/epics-modules
      action: 'edit'
      target: '$(Build.SourceVersion)'
      assets: |
          *.deb
          *.tar.bz2
      assetUploadMode: 'replace'
      tagSource: 'Git tag'
      tag: 'v0.1'
      releaseNotesSource: 'file'
      releaseNotesFile: 'release.txt'
    displayName: 'Create GitHub Release'

- job: Windows
  timeoutInMinutes: 0
  pool:
      vmImage: 'vs2017-win2016'
  variables:
    EPICS_HOST_ARCH: 'windows-x64-static'
    VC_ARCH: 'amd64'
    BOOST_VERSION: '1_69_0'

  steps:
  - script: |
      curl -Lo boost.zip  https://dl.bintray.com/boostorg/release/1.69.0/source/boost_%BOOST_VERSION%.zip
      unzip -q boost.zip
      cd boost_%BOOST_VERSION%
      call bootstrap.bat
      .\b2 address-model=64 architecture=x86 --with-test link=static
    displayName: Build Boost

  - script: make update
    displayName: 'Update git repos'

  - script: make release
    displayName: 'Update RELEASE files'

  - script: |
      python configure/modify_release.py ADSIMDETECTOR SET areaDetector/configure/RELEASE.local
      python configure/modify_release.py WITH_BOOST    YES areaDetector/configure/CONFIG_SITE.local
      python configure/modify_release.py BOOST_USE_STATIC_LINK YES areaDetector/configure/CONFIG_SITE.local
      python configure/modify_release.py BOOST_LIB "%BUILD_STAGINGDIRECTORY%/boost_%BOOST_VERSION%" areaDetector/configure/CONFIG_SITE.local
      python configure/modify_release.py BOOST_INCLUDE "%BUILD_STAGINGDIRECTORY%/boost_%BOOST_VERSION%" areaDetector/configure/CONFIG_SITE.local
    displayName: 'Modify AD Release File'

  - script: | 
      set PATH=C:\ProgramData\Chocolatey\bin;C:\Windows\System32
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %VC_ARCH%
      set PATH=C:\Strawberry\c\bin;C:\Strawberry\perl\site\bin;C:\Strawberry\perl\bin;%PATH%
      PATH
      make areaDetector
    displayName: 'Build areaDetector'

  - script: .\asyn\asyn\asynPortDriver\unittest\O.%EPICS_HOST_ARCH%\asynPortDriverTest
    displayName: Run Asyn Tests

  - powershell: |
      $path = "areaDetector"
      $destination = "release/areaDetector-$env:EPICS_HOST_ARCH.zip"
      $exclude = @("*.git*")
      $files = Get-ChildItem -Path $path -Exclude $exclude
      New-Item -Path "." -Force -Name "release" -ItemType "directory"
      Compress-Archive -Path $files $destination -CompressionLevel Fastest
    displayName: Create archive
    
  - script: make versions > release\release.txt
    displayName: 'Set release text'

  - task: GitHubRelease@0
    inputs:
      gitHubConnection: NSLS-II
      repositoryName: NSLS-II/epics-modules
      action: 'edit'
      target: '$(Build.SourceVersion)'
      assets: 'release/*.zip'
      assetUploadMode: 'replace'
      tagSource: 'Git tag'
      tag: 'v0.1'
      releaseNotesSource: 'file'
      releaseNotesFile: 'release/release.txt'
    displayName: 'Create GitHub Release'
